{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;AAEO,IAAM,gDAAoB,SAApB,iBAAoB,GAAsD;AAAA,qEAAP,EAAO;;AAAA,8BAApD,SAAoD;AAAA,QAApD,SAAoD,kCAA1C,QAA0C;AAAA,oCAAhC,eAAgC;AAAA,QAAhC,eAAgC,wCAAhB,KAAgB;;AACnF,WAAO;AACH,uCACK,SADL,EACiB,gBAAM,SAAN,CAAgB,MADjC,CADG;AAIH,oBAJG,0BAIY;AAAA,yBACc,KAAK,KADnB;AAAA,gBACN,MADM,UACN,MADM;;AAAA,gBACK,KADL;;AAEX,iBAAK,KAAL,GAAa,kBAAkB,OAAO,MAAP,CAAc,KAAd,EAAqB,MAArB,CAAlB,GAAiD,OAAO,MAAP,CAAc,MAAd,EAAsB,KAAtB,CAA9D;AACH,SAPE;AAQH,0BARG,gCAQkB;AACjB,iBAAK,YAAL;AACH,SAVE;AAWH,iCAXG,uCAWyB;AACxB,iBAAK,YAAL;AACH;AAbE,KAAP;AAeH,CAhBM;;AAkBA,IAAM,oCAAc,mBAApB","file":"index.js","sourcesContent":["import React from 'react';\n\nexport const customConfigMixin = ({paramName='config', prioritizeNamed=false} = {}) => {\n    return {\n        propTypes: {\n            [paramName]: React.PropTypes.object\n        },\n        spreadConfig() {\n            var {config, ...other} = this.props;\n            this.props = prioritizeNamed ? Object.assign(other, config) : Object.assign(config, other);\n        },\n        componentWillMount() {\n            this.spreadConfig();\n        },\n        componentWillReceiveProps() {\n            this.spreadConfig()\n        }\n    }\n};\n\nexport const configMixin = customConfigMixin();\n"]}